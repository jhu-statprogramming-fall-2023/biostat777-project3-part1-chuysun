[{"path":"/articles/Example_analysis.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Example_analysis","text":"","code":"if (!dir.exists(here(\"data\"))) {     dir.create(here(\"data\")) }  files = c(\"tornados.rda\") if (any(!file.exists(here(\"data\", files)))) {     tuesdata = tidytuesdayR::tt_load('2023-05-16')     tornados = tuesdata$tornados     # save the files to rda objects     save(tornados, file = here(\"data\", \"tornados.rda\"), compress = \"xz\") }  load(here(\"data\", \"tornados.rda\"))"},{"path":"/articles/Example_analysis.html","id":"glimpse-of-data","dir":"Articles","previous_headings":"","what":"Glimpse of data","title":"Example_analysis","text":"","code":"map_chr(.x = tornados, .f = typeof) #>           om           yr           mo           dy         date         time  #>     \"double\"     \"double\"     \"double\"     \"double\"     \"double\"     \"double\"  #>           tz datetime_utc           st          stf          mag          inj  #>  \"character\"     \"double\"  \"character\"     \"double\"     \"double\"     \"double\"  #>          fat         loss         slat         slon         elat         elon  #>     \"double\"     \"double\"     \"double\"     \"double\"     \"double\"     \"double\"  #>          len          wid           ns           sn           f1           f2  #>     \"double\"     \"double\"     \"double\"     \"double\"     \"double\"     \"double\"  #>           f3           f4           fc  #>     \"double\"     \"double\"    \"logical\" ## test NA map(tornados, ~ any(is.na(.))) #> $om #> [1] FALSE #>  #> $yr #> [1] FALSE #>  #> $mo #> [1] FALSE #>  #> $dy #> [1] FALSE #>  #> $date #> [1] FALSE #>  #> $time #> [1] FALSE #>  #> $tz #> [1] FALSE #>  #> $datetime_utc #> [1] FALSE #>  #> $st #> [1] FALSE #>  #> $stf #> [1] FALSE #>  #> $mag #> [1] TRUE #>  #> $inj #> [1] FALSE #>  #> $fat #> [1] FALSE #>  #> $loss #> [1] TRUE #>  #> $slat #> [1] FALSE #>  #> $slon #> [1] FALSE #>  #> $elat #> [1] FALSE #>  #> $elon #> [1] FALSE #>  #> $len #> [1] FALSE #>  #> $wid #> [1] FALSE #>  #> $ns #> [1] FALSE #>  #> $sn #> [1] FALSE #>  #> $f1 #> [1] FALSE #>  #> $f2 #> [1] FALSE #>  #> $f3 #> [1] FALSE #>  #> $f4 #> [1] FALSE #>  #> $fc #> [1] FALSE"},{"path":"/articles/Example_analysis.html","id":"data-wrangling","dir":"Articles","previous_headings":"","what":"Data Wrangling","title":"Example_analysis","text":"","code":"FL=tornados%>%   filter(st==\"FL\")%>%   group_by(yr)%>%   select(yr, mag)%>%   summarise(fl_mag_mean=mean(mag, na.rm = T))"},{"path":"/articles/Example_analysis.html","id":"plot-1","dir":"Articles","previous_headings":"","what":"Plot 1","title":"Example_analysis","text":"","code":"FL%>%   ggplot(aes(x=yr, y=fl_mag_mean))+   geom_line()+   labs(title = \"Florida average tornados magnitude from 1950-2020\",        subtitle = \"There is a decreasing trend from 1950 to 2020.  The lowest period is around 2000.\",  x=\"years\", y=\"average tornados magnitude\", caption = \"Chuyi Sun\")+   bbc_style()+   theme(plot.title=element_text(size = 15), plot.subtitle = element_text(size = 9))"},{"path":"/articles/Example_analysis.html","id":"plot-2","dir":"Articles","previous_headings":"","what":"Plot 2","title":"Example_analysis","text":"","code":"state_summary=tornados%>%   mutate(tz=as.factor(tz))%>%   mutate(st=as.factor(st))%>%   select(-c(\"slat\", \"slon\", \"elat\", \"elon\"))%>%   group_by(st,mo)%>%   arrange(mag)%>%   summarise(state_mean=mean(mag, na.rm = T),.groups = \"drop\") plot1=state_summary%>%   ggplot(aes(x=st, y=state_mean))+   geom_point()+   facet_wrap(~mo, nrow = 6, scales = \"free\")+    labs(title = \"Average tornados magnitude of US states in each months\",        subtitle = \"Except for September, other months tend to have similar  average tornado magnitude. Alaska almost never has a tornado.\", x=\"States\", y=\"average tornados magnitude\", caption = \"Chuyi Sun\")+   geom_text(aes(label=st),size=2,vjust = -0.5)+   theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1, size = 5))  finalise_plot(plot_name = plot1,source = \"Source: Example_analysis\",save_filepath = \"state_summary.png\")"},{"path":"/articles/Example_analysis.html","id":"plot-3","dir":"Articles","previous_headings":"","what":"Plot 3","title":"Example_analysis","text":"","code":"tornados%>%   mutate(stage=case_when(yr>1949 & yr<1975 ~ \"1950-1974\", yr>1974 & yr<2000 ~ \"1975-1999\",yr>1999 & yr<2025 ~ \"2000-2024\"))%>%   select(stage, inj)%>%   group_by(stage)%>%   summarise(stage_sum=sum(inj))%>%   ggplot(aes(x=stage, y=stage_sum))+   geom_bar(stat=\"identity\")+   labs(title = \"Total injuries in tornados in every 24 years\",        subtitle = \"Between 1950-1974, there were a lot of injuries,  and 2000-2024 had the lowest injuries. There is a decreasing trend over time.\", x=\"States\", y=\"average tornados magnitude\", caption = \"Chuyi Sun\")"},{"path":"/articles/Example_analysis.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Example_analysis","text":"can see decreasing trend magnitude tornados, therefore trend injuries also decreasing. Besides, reduction injuries might due development prevention. Looking spread tornado month, except September, months tend similar average tornado magnitude.","code":""},{"path":[]},{"path":"/articles/Example_analysis.html","id":"dplyr","dir":"Articles","previous_headings":"Functions used","what":"Dplyr","title":"Example_analysis","text":"mutate group_by filter select case_when summarise","code":""},{"path":"/articles/Example_analysis.html","id":"ggplot2","dir":"Articles","previous_headings":"Functions used","what":"ggplot2","title":"Example_analysis","text":"geom_line geom_point geom_bar geom_text facet_wrap","code":""},{"path":"/articles/Example_analysis.html","id":"purrr","dir":"Articles","previous_headings":"Functions used","what":"purrr","title":"Example_analysis","text":"map_chr map","code":""},{"path":"/articles/Example_analysis.html","id":"bbplot","dir":"Articles","previous_headings":"Functions used","what":"bbplot","title":"Example_analysis","text":"bbc_style finalise_plot","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nassos Stylianou. Author, maintainer. Clara clara.guibourg@bbc.co.uk Guibourg. . william.dahlgreen@bbc.co.uk Dahlgreen. Author. Robert robert.cuffe@bbc.co.uk Cuffe. Author. Tom Calver. Author. Ransome Mpini. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stylianou N, Dahlgreen Ww, Cuffe Rr, Calver T, Mpini R (2023). bbplot: MAKING GGPLOT GRAPHICS BBC NEWS STYLE. R package version 0.2.","code":"@Manual{,   title = {bbplot: MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE},   author = {Nassos Stylianou and Will william.dahlgreen@bbc.co.uk Dahlgreen and Robert robert.cuffe@bbc.co.uk Cuffe and Tom Calver and Ransome Mpini},   year = {2023},   note = {R package version 0.2}, }"},{"path":"/index.html","id":"bbplot","dir":"","previous_headings":"","what":"BBPLOT","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"R package came (https://github.com/bbc/bbplot.git) deployed website URL (https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-chuysun/)","code":""},{"path":"/index.html","id":"modify","dir":"","previous_headings":"","what":"Modify","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"Change background color Change theme Change font Change navigation bar Change code background","code":""},{"path":"/index.html","id":"author","dir":"","previous_headings":"Modify","what":"Author","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"author website example analysis Chuyi Sun. authors package Nassos Stylianou, Clara Guibourg, Dahlgreen, Robert Cuffe, Tom Calver, Ransome Mpini.","code":""},{"path":"/index.html","id":"original-readme","dir":"","previous_headings":"","what":"Original README","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"repo contains functions bbplot package, installed locally, provides helpful functions creating exporting graphics made ggplot style used BBC News data team. Example graphics created using bbplot package","code":""},{"path":"/index.html","id":"installing-bbplot","dir":"","previous_headings":"","what":"Installing bbplot","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"bbplot CRAN, install directly Github using devtools. devtools package installed, run first line code well.","code":"# install.packages('devtools') devtools::install_github('bbc/bbplot')"},{"path":"/index.html","id":"using-the-functions","dir":"","previous_headings":"","what":"Using the functions","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"package two functions plots: bbc_style() finalise_plot. Detailed examples use functions included within bbplot package produce graphics included R cookbook, well general reference manual working ggplot2. basic explanation summary :","code":""},{"path":"/index.html","id":"bbc_style","dir":"","previous_headings":"Using the functions","what":"bbc_style()","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"bbc_style(): arguments added ggplot chain created plot. generally makes text size, font colour, axis lines, axis text many standard chart components BBC style, formulated together Visual Journalism design team. function pretty basic change adapt based type chart making, cases need make additional theme arguments ggplot chain want make additions changes style, example add remove gridlines etc. Also note colours lines case line chart bars bar chart, come box bbc_style function, need explicitly set standard ggplot chart functions. Example used standard workflow:","code":"line <- ggplot(line_df, aes(x = year, y = lifeExp)) + geom_line(colour = \"#007f7f\", size = 1) + geom_hline(yintercept = 0, size = 1, colour=\"#333333\") + bbc_style()"},{"path":"/index.html","id":"finalise_plot","dir":"","previous_headings":"Using the functions","what":"finalise_plot","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"finalise_plot: save plot correct guidelines publication BBC News graphic. made functions left align title, subtitle source, add BBC blocks bottom right save specified location. function six arguments, three need explicitly set three defaults unless overwrite . function arguments: finalise_plot(plot_name, source_name, save_filepath, width_pixels, height_pixels, logo_image_path) plot_name: variable name called plot, example chart example plot_name \"line\" source_name: source text want appear bottom left corner plot. need type word \"Source:\" , just source, example source = \"Source: ONS\" right way . save_filepath: precise filepath want graphic save , including .png extension end. depend working directory specific R project. example relative filepath : /charts/line_chart.png. width_pixels: set 640px default, call argument specify width want chart . height_pixels: set 450px default, call argument specify height want chart . logo_image_path: argument specifies path image/logo bottom right corner plot. default placeholder PNG file background matches background colour plot, specify argument want appear without logo. want add logo, just specify path PNG file. package prepared wide thin image mind. Example finalise_plot() used standard workflow. function called created finalised chart data, titles added bbc_style() (see ):","code":"finalise_plot(plot_name = my_line_plot, source = \"Source: ONS\", save_filepath = \"filename_that_my_plot_should_be_saved_to-nc.png\", width_pixels = 640, height_pixels = 550)"},{"path":"/reference/bbc_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bbc theme to ggplot chart — bbc_style","title":"Add bbc theme to ggplot chart — bbc_style","text":"function allows add bbc theme ggplotgraphics.","code":""},{"path":"/reference/bbc_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bbc theme to ggplot chart — bbc_style","text":"","code":"bbc_style()"},{"path":"/reference/bbc_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add bbc theme to ggplot chart — bbc_style","text":"","code":"line <- ggplot(line_df, aes(x = year, y = lifeExp)) + geom_line(colour = \"#007f7f\", size = 1) + geom_hline(yintercept = 0, size = 1, colour=\"#333333\") + bbc_style() #> Error in ggplot(line_df, aes(x = year, y = lifeExp)): could not find function \"ggplot\""},{"path":"/reference/finalise_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange alignment and save BBC ggplot chart — finalise_plot","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"Running function save plot correct guidelines publication BBC News graphic. left align title, subtitle source, add BBC blocks bottom right save specified location.","code":""},{"path":"/reference/finalise_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"","code":"finalise_plot(plot_name, source_name, save_filepath, width_pixels = 640,   height_pixels = 450, logo_image_path = file.path(system.file(\"data\",   package = \"bbcggplotr\"), \"bbc_blocks_r.png\"))"},{"path":"/reference/finalise_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"plot_name variable name plot created want format save source_name text want come text 'Source:' bottom left hand side side save_filepath Exact filepath want plot saved width_pixels Width pixels want save chart - defaults 640 height_pixels Height pixels want save chart - defaults 450 logo_image_path File path logo image want use right hand side chart, needs PNG file - defaults BBC blocks image sits within data folder package","code":""},{"path":"/reference/finalise_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"","code":"finalise_plot(plot_name = myplot, source = \"The source for my data\", save_filepath = \"filename_that_my_plot_should_be_saved_to-nc.png\", width_pixels = 640, height_pixels = 450, logo_image_path = \"logo_image_filepath.png\" ) #> Error in png::readPNG(logo_image_path): unable to open logo_image_filepath.png"}]
